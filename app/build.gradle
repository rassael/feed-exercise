apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 32
    buildToolsVersion '29.0.3'

    kotlinOptions {
        freeCompilerArgs += [
                "-Xjvm-default=all"
        ]
    }

    defaultConfig {
        applicationId 'com.lightricks.feedexercise'
        minSdkVersion 24
        targetSdkVersion 32
        versionCode 1
        versionName '1.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // Kotlin standard library
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // Android X
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    // Lifecycle components
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    // Material design library
    implementation 'com.google.android.material:material:1.6.1'
    // Glide image loading framework
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    implementation 'androidx.test.ext:junit-ktx:1.1.3'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.testng:testng:6.9.6'
    kapt 'com.github.bumptech.glide:compiler:4.13.2'
    // Testing frameworks
    androidTestImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.ext:truth:1.4.0'
    // Retrofit HTTP client
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    // Moshi JSON library
    implementation 'com.squareup.moshi:moshi:1.9.3'
    implementation 'com.squareup.moshi:moshi-kotlin:1.9.3'
    // Coroutines for asynchronous programming
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4')
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4')
    // Room
    def room_version = "2.4.3"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
        // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
        // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // Tests
    androidTestImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.ext:truth:1.4.0'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // Mockito
    testImplementation 'org.mockito:mockito-core:4.8.0'
    testImplementation 'org.mockito:mockito-inline:4.0.0'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    implementation "org.mockito:mockito-android:4.8.0"

    // mock websever for testing retrofit responses
    testImplementation "com.squareup.okhttp3:mockwebserver:4.6.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
}
